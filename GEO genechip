rm(list = ls())

install.packages("...")
if(!requireNamespace("...", quietly = TRUE)) install.packages("BiocManager")
BiocManager::in
 library('GEOquery')
stall('...')
suppressMessages(library(clusterProfiler))

if(F){ library('gplots')
 setwd()
 eSet <- getGEO('...',destdir = ".",
                AnnotGPL = F,
                getGPL = F)
save(eSet,file='..._eSet.Rdata')

 load('..._eSet.Rdata')
 class(eSet)
 eSet = as.data.frame(eSet)
 b=eSet[[1]]
 exprSet=exprs(b)
 phe=pData(b)
###############################################   
 {boxplot(exprSet,outline=F, notch=T, las=2)
 exprSet = normalizeBetweenArray(exprSet)
 boxplot(exprSet,outline=F, notch=T, las=2)
 
 ex <- exprSet
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
  (qx[6]-qx[1] > 50 && qx[2] > 0) ||
  (qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)

if (LogC) { 
  ex[which(ex <= 0)] <- NaN
  exprSet <- log2(ex)
  print("log2 transform finished")
  }else{
    print("log2 transform not needed")
  }
  
  library(limma) 
exprSet=normalizeBetweenArrays(exprSet)
boxplot(exprSet,outline=FALSE, notch=T, las=2)
###############################################
 library(stringr)
  group_list= str_split(as.character(phe$title),' ',simplify = T)[,1]
  exprSet <- as.data.frame(exprSet)
  save(exprSet,group_list,
     file='..._exprSet.Rdata')
###############################################
expr.df <- read.table(file = "..._series_matrix.txt", header =TRUE,
                      comment.char = "!", row.names=1)  
                      ### matrix
################################################ 
 gpl...	<- getGEO('...')
 colnames(Table(...))
 symbol <- Table(gpl...)[c('ID','Gene Symbol')]; head(symbol)
 write.csv(symbol,"symbol.csv")
 
 ID <- rownames(exprSet)
exprSet <- exprSet %>% 
  mutate(rowMean =rowMeans(.[,-1]),ID = ID) %>% 
  arrange(desc(rowMean)) %>% 
  distinct(ID,.keep_all = T) %>% 
  dplyr::select(-rowMean) %>% 
  column_to_rownames("ID")
 ############################################### 
 sample <- phe$geo_accession
 treat_time <- rep(c("...","..."),each=..)
 treat_type <- rep(c("...","..."), c(..,..))
 design_df <- data.frame(sample, treat_type)
 
 library('limma') 
 TS <- paste( design_df$treat_type, sep=".")
 TS <- factor(TS, levels = unique(TS))
 design <- model.matrix(~0+TS)
 fit <- lmFit(exprSet, design)
 ###############################################
 pairinfo = factor(rep(..,.))
 TS <- c(rep('...',18),rep('...',18))
 TS <- factor(group,levels = c("...","..."),ordered = F)
 design <- model.matrix(~TS+pairinfo)
 ################################################
 
 diff= cont.matrix <- makeContrasts(TS...-TS..., levels=design) 
   #vs2  = TS...-TS...,
   #vs3  = TS...-TS...,

 fit2 <- contrasts.fit(fit, cont.matrix)
 results <- decideTests(fit2)
 vennDiagram(results)
 fit2 <- eBayes(fit2)
 tempOP = topTable(fit2,coef=1,n=Inf,adjust="BH") 
 nrDEG = na.omit(tempOP)
 write.csv(limmaOP,"limmaOP.csv")
 
 limmaOP <- read.csv("limmaOP.csv")
 length(intersect(limmaOP[,1],symbol[,1]))
 colnames(symbol);colnames(limmaOP)
 DEG=merge(limmaOP,symbol,by.x = "X",by.y = "ID")
 DEG <- subset(DEG,abs(logFC) >0 & adj.P.Val < 0.05)
 DEG=DEG[,c(8,2:7)]
 library(dplyr)
 DEG<-DEG %>%
   na_if("") %>%
   na.omit
 save(DEG,file = 'DEG.Rda')
 write.csv(DEG,"DEG.csv")
 write.csv(DEG,"DEG.csv")
 ###################################################

 
 getwd()
 results <- read.csv('results.csv', header = T)
 
 dim(exprSet);dim(exprSet1)
 expr.na <- expr[is.na(expr$Symbol)]; dim(expr.na)
 exprset2 <- expr[,-1]
 exprset3 <- exprset2[c(23,1:22)]; head(exprset3)
 failed <- exprset3[exprset3$Symbol=='',]
 head(failed)
 dim(failed)
 official.failed <- symbol[symbol$Symbol=='',]
 dim(official.failed)
 exprset4 <- exprset3[exprset3$Symbol!='',]; dim(exprset4)
 write.table(exprset3, file = 'results.txt', sep = "\t", row.names = F)
 
}
##############################################################
if(F){
  rm(list = ls())
 library("GEOquery")
 setwd('E:/Desktop/Data/GEO/GSE30529')
 gset <- getGEO("GSE30529", GSEMatrix =TRUE, AnnotGPL=TRUE )
 getGEOSuppFiles("GSE30529")
 setwd('GSE30529')
 untar('GSE30529_RAW.tar',exdir = 'data')  
 setwd('data')
 cels <- list.files() ; sapply(cels, gunzip)

 library(affy)
 affy.data <- ReadAffy()
 length(affy.data)
 eset.rma <- rma(affy.data)
 exprSet <- exprs(eset.rma)
 write.table(exprSet, "expr_rma_matrix.txt", quote=F, sep="\t")
 exprSet <- exprs(gset.rma)
}
#####################################################################

allDiff <- nrDEG
diff=allDiff
write.csv(diff, "limmaOut.csv")
diffSig = diff[(diff$P.Value < padj & (diff$logFC>foldChange | diff$logFC<(-foldChange))),]#ɸѡ????????????#
#write.table(diffSig, file="diffSig.xls",sep="\t",quote=F)#???????????????????ĵ?diffSig?????ļ?#
write.csv(diffSig, "diffSig.csv")
diffUp = diff[(diff$P.Value < padj & (diff$logFC>foldChange)),]
#write.table(diffUp, file="up.xls",sep="\t",quote=F)#39-42???ϵ????µ??ֱ?????up??down��???ļ?#
write.csv(diffUp, "diffUp.csv")
diffDown = diff[(diff$P.Value < padj & (diff$logFC<(-foldChange))),]
#write.table(diffDown, file="down.xls",sep="\t",quote=F)
write.csv(diffDown, "diffDown.csv")
       
